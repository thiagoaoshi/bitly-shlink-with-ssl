services:
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      - "--configfile=/etc/traefik/traefik.yml"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "./traefik.yml:/etc/traefik/traefik.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  shlink:
    image: shlinkio/shlink:latest
    container_name: shlink
    restart: always
    ports:
      - "8081:8080"
    environment:
      - INITIAL_API_KEY=${SHLINK_API_KEY}
      - DEFAULT_DOMAIN=${DOMAIN}
      - IS_HTTPS_ENABLED=${SHLINK_IS_HTTPS_ENABLED}

      - DB_DRIVER=${DB_DRIVER}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/rest/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shlink.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.shlink.entrypoints=websecure"
      - "traefik.http.routers.shlink.tls.certresolver=myresolver"
      - "traefik.http.services.shlink.loadbalancer.server.port=8080"

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
